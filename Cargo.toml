# You must change these to your own details.
[package]
authors = ["Daniel Sonne Lehnberg <doddy@doddy.se>"]
categories = ["wasm"]
description = "Rust, WASM and WebGL."
edition = "2018"
name = "rust-webpack-template"
readme = "README.md"
version = "0.1.0"

[lib]
crate-type = ["cdylib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true

[features]
# If you uncomment this line, it will enable `wee_alloc`:
#default = ["wee_alloc"]

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
wasm-bindgen = "0.2.69"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. However, it is slower than the default
# allocator, so it's not enabled by default.

wee_alloc = {version = "0.4.5", optional = true}

# Other dependencies
js-sys = "0.3.46"
lazy_static = "1.4.0"
nalgebra = "0.23.1"

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
features = [
  'console',
  'Document',
  'DomImplementation',
  'Element',
  'EventTarget',
  'HtmlCanvasElement',
  'MouseEvent',
  'WebGlBuffer',
  'WebGlProgram',
  'WebGlRenderingContext',
  'WebGlShader',
  'WebGlUniformLocation',
  'Window',
]
version = "0.3.46"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"

# These crates are used for running unit tests.
[dev-dependencies]
futures = "0.1.27"
js-sys = "0.3.46"
lazy_static = "1.4.0"
nalgebra = "0.23.1"
wasm-bindgen-futures = "0.3.22"
wasm-bindgen-test = "0.2.45"
